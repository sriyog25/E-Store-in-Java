
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sriyo
 */
public class Menu extends javax.swing.JFrame {

    

    /**
     * Creates new form Menu
     */
    String st;
    public Menu() {
        initComponents();
    }
    public Menu(String str) {
        initComponents();
        st=str;
        try
            {
        Class.forName("java.sql.DriverManager");
        Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/e_store", "root","Sriyog123");
        Statement stmt = (Statement) con.createStatement();
        String query="Select cart1.cart_id from cart,cart1 where cart.cart_id=cart1.cart_id and cart.cart_id='"+st+"';";
        ResultSet rs=stmt.executeQuery(query);
        if(rs.next())
        {
            jButton3.setEnabled(true);
        }
        else
        {
            jButton3.setEnabled(false);
        }
            }
        catch(Exception e)
        {
            System.out.println(e);
        }
        
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Shopping Category");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "Laptop", "Mobile", "T.V", "Headphones/Earphones", "Other Accessories", " " }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SR_No", "BRAND", "MODEL", "WARRANTY", "PRICE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(40);
        }

        jButton1.setText("DISPLAY MENU");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("REFRESH");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("PROCCED TO CART");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("LOGOUT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 102, 255));
        jLabel3.setText("ENJOY SHOPPING WITH US");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(409, 409, 409)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
try
{
Class.forName("java.sql.DriverManager");
Connection con = (Connection)
DriverManager.getConnection
("jdbc:mysql://localhost:3306/e_store",
"root", "Sriyog123");
Statement stmt = (Statement) con.createStatement();
String sel=(String) jComboBox1.getSelectedItem();
if (sel.equals("Laptop"))
{
    String Laptop="Laptop";
String query="SELECT Item_No,Brand,Model,Warranty,Price FROM Electronic_Item where Category='"+Laptop+"'";
ResultSet rs = stmt.executeQuery(query);
while(rs.next())
{
String i = rs.getString("Item_No");
String u = rs.getString("Brand");
String p = rs.getString("Model");
String w = rs.getString("Warranty");
String pr = rs.getString("Price");
model.addRow (new Object[] {i,u,p,w,pr});
}
}
if (sel.equals("Mobile"))
{
    String Mobile="Mobile";
String query="SELECT Item_No,Brand,Model,Warranty,Price FROM Electronic_Item where Category='"+Mobile+"'";
ResultSet rs = stmt.executeQuery(query);
while(rs.next())
{
String i = rs.getString("Item_No");
String u = rs.getString("Brand");
String p = rs.getString("Model");
String w = rs.getString("Warranty");
String pr = rs.getString("Price");
model.addRow (new Object[] {i,u,p,w,pr});
}
}
if (sel.equals("T.V"))
{
    String t="TV";
String query="SELECT Item_No,Brand,Model,Warranty,Price FROM Electronic_Item where Category='"+t+"'";
ResultSet rs = stmt.executeQuery(query);
while(rs.next())
{
String i = rs.getString("Item_No");
String u = rs.getString("Brand");
String p = rs.getString("Model");
String w = rs.getString("Warranty");
String pr = rs.getString("Price");
model.addRow (new Object[] {i,u,p,w,pr});
}
}
if (sel.equals("Headphones/Earphones"))
{
    String h="EP";
String query="SELECT Item_No,Brand,Model,Warranty,Price FROM Electronic_Item where Category='"+h+"'";
ResultSet rs = stmt.executeQuery(query);
while(rs.next())
{
String i = rs.getString("Item_No");
String u = rs.getString("Brand");
String p = rs.getString("Model");
String w = rs.getString("Warranty");
String pr = rs.getString("Price");
model.addRow (new Object[] {i,u,p,w,pr});
}
}
if (sel.equals("Other Accessories"))
{
    String acc="Acc";
String query="SELECT Item_No,Brand,Model,Warranty,Price FROM Electronic_Item where Category='"+acc+"'";
ResultSet rs = stmt.executeQuery(query);
while(rs.next())
{
String i = rs.getString("Item_No");
String u = rs.getString("Brand");
String p = rs.getString("Model");
String w = rs.getString("Warranty");
String pr = rs.getString("Price");
model.addRow (new Object[] {i,u,p,w,pr});
}
}
}
catch (Exception e)
{
JOptionPane.showMessageDialog (this, e.getMessage());
}


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model = (DefaultTableModel)
jTable1.getModel(); int rows=model.getRowCount();
if (rows>0)
{
for (int i=0; i<rows; i++)
model.removeRow(0); // To remove all rows from

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int r=jTable1.getSelectedRow();
        jButton3.setEnabled(true);
        String sel=(String) jComboBox1.getSelectedItem();
        TableModel model = jTable1.getModel();
        
        if (sel.equals("Laptop"))
        {
        r=r+1;
        }
        if (sel.equals("Mobile"))
        {
           r=r+11; 
        }
        if (sel.equals("T.V"))
        {
           r=r+21; 
        }
        if (sel.equals("Headphones/Earphones"))
        {
           r=r+31; 
        }
        if (sel.equals("Other Accessories"))
        {
           r=r+41; 
        }
        try
            {
        Class.forName("java.sql.DriverManager");
        Connection con = (Connection)
        DriverManager.getConnection
        ("jdbc:mysql://localhost:3306/e_store",
        "root", "Sriyog123");
        Statement stmt = (Statement) con.createStatement();
        String query="Select Item_No,price from Electronic_item where item_no='"+r+"';";
            ResultSet rs=stmt.executeQuery(query);
            if(rs.next())
            {
                String it=rs.getString("Item_No");
                String pr=rs.getString("Price");
                String query1="INSERT INTO cart1(Cart_ID,Item_No,I_price) VALUES('"+st+"','"+it+"','"+pr+"');";
                stmt.executeUpdate(query1);
                JOptionPane.showMessageDialog(this,"Item has been added to cart");
               
            }
            }
        catch(Exception e)
                {
                System.out.println(e);
                }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try
            {
        Class.forName("java.sql.DriverManager");
        Connection con = (Connection)
        DriverManager.getConnection
        ("jdbc:mysql://localhost:3306/e_store",
        "root", "Sriyog123");
        Statement stmt = (Statement) con.createStatement();
        String query="Select SUM(I_Price) as total  from Cart1 where Cart_ID='"+st+"';";
            ResultSet rs=stmt.executeQuery(query);
           
            if(rs.next())
            {
                String tot=rs.getString("total");
                 String query1="Update Cart set Price='"+tot+"' where Cart_ID='"+st+"';";
                stmt.executeUpdate(query1);
                String query2="Select count(Cart_ID) as quan  from Cart1 where Cart_ID='"+st+"';";
                ResultSet rs1=stmt.executeQuery(query2);
                if(rs1.next())
                {
                      String c=rs1.getString("quan");
                       String query3="Update Cart set Quantity='"+c+"' where Cart_ID='"+st+"';";
                        stmt.executeUpdate(query3);
                }
            }
            String query4=" Select I_Price from Cart1 where Cart_ID in(select cart_id from cart1 group by cart_id having count(*)>0 and cart_id='"+st+"');";
            ResultSet rs2=stmt.executeQuery(query4);
            rs2=stmt.getResultSet();
            ArrayList<String> list=new ArrayList<String>();
            String ipr="";
            while(rs2.next())
            {
                ipr=rs2.getString("I_price");
                list.add(ipr);
                
            }
            String query5=" Select Electronic_item.Brand from Cart1,Electronic_item where cart1.item_no=electronic_item.item_no and cart1.Cart_ID in(select cart_id from cart1 group by cart_id having count(*)>0 and cart_id='"+st+"');";
            ResultSet rs5=stmt.executeQuery(query5);
            rs5=stmt.getResultSet();
            ArrayList<String> list1=new ArrayList<String>();
            String b="";
            while(rs5.next())
            {
                b=rs5.getString("Electronic_item.brand");
                list1.add(b);
                
            }
            String query6="Select Electronic_item.model from Cart1,Electronic_item where cart1.item_no=electronic_item.item_no and cart1.Cart_ID in(select cart_id from cart1 group by cart_id having count(*)>0 and cart_id='"+st+"');";
            ResultSet rs6=stmt.executeQuery(query6);
            rs6=stmt.getResultSet();
            ArrayList<String> list2=new ArrayList<String>();
            String m="";
            while(rs6.next())
            {
                m=rs6.getString("Electronic_item.model");
                list2.add(m);
                
            }
            String query7="Select Price from Cart where cart_id='"+st+"';";
            ResultSet rs7=stmt.executeQuery(query7);
            while(rs7.next())
            {
                String gp=rs7.getString("Price");
                 new Cart(list,list1,list2,gp,st).setVisible(true);
                 this.dispose();
            }
            }
            catch(Exception e)
            {
                System.out.println(e);
            }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new Log_in().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
